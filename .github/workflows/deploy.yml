name: deploy
on: 
    workflow_dispatch:
        inputs:
            deployment_environment:
                description: 'Set to `prod` to deploy in production.'
                required: true
                default: 'dev'
jobs:
    compile-and-deploy-frontend:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: '18'
        - run: npm ci
        - run: echo "VITE_DEPLOYMENT_ID=${{ github.run_id }}${{ github.run_attempt }}" >> .env
        - if: github.event.inputs.deployment_environment == 'prod'
          run: echo "VITE_LAMBDA_FUNCTION_URL=${{ secrets.LAMBDA_FUNCTION_URL_PROD }}" >> .env
        - if: github.event.inputs.deployment_environment != 'prod'
          run: echo "VITE_LAMBDA_FUNCTION_URL=${{ secrets.LAMBDA_FUNCTION_URL_DEV }}" >> .env
        - run: npm run build
        - name: Copy manifest.json to ensure backwards compatibility with pre Vite 5
          run: cp dist/.vite/manifest.json dist/manifest.json
        - uses: montudor/action-zip@v1
          with:
            args: zip -qq -r dist.zip dist
        - if: github.event.inputs.deployment_environment == 'prod'
          uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: "latest"
            prerelease: false
            files: |
              dist.zip
        - if: github.event.inputs.deployment_environment != 'prod'
          uses: shallwefootball/s3-upload-action@master
          name: Upload to S3 dev preview
          with:
            aws_key_id: ${{ secrets.AWS_KEY_ID }}
            aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
            aws_bucket: ${{ secrets.AWS_S3_DEV_BUCKET }}
            source_dir: 'dist'
            destination_dir: 'dev/'
            endpoint: https://s3.ca-central-1.amazonaws.com
    deploy-lambda-function:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup Python 3.11
              uses: actions/setup-python@v1
              with:
                python-version: 3.11
            - name: Bundle payload with function
              run: |
                cp ./src/assets/payload.xlsx ./server/payload.xlsx
                rm ./server/requirements.txt
                zip -j --quiet -r lambda.zip server
            - name: Create artifact
              uses: actions/upload-artifact@v3
              with:
                name: lambda
                path: lambda.zip
            - name: Deploy to Lambda Production
              if: github.event.inputs.deployment_environment == 'prod'
              uses: appleboy/lambda-action@master
              with:
                aws_access_key_id: ${{ secrets.AWS_KEY_ID }}
                aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws_region: ca-central-1
                function_name: ${{ secrets.AWS_LAMBDA_FUNCTION_NAME_PROD }}
                zip_file: lambda.zip
                environment: deploymentid=${{ github.run_id }}${{ github.run_attempt }}
            - name: Deploy to Lambda Devlopment
              if: github.event.inputs.deployment_environment != 'prod'
              uses: appleboy/lambda-action@master
              with:
                  aws_access_key_id: ${{ secrets.AWS_KEY_ID }}
                  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws_region: ca-central-1
                  function_name: ${{ secrets.AWS_LAMBDA_FUNCTION_NAME_DEV }}
                  zip_file: lambda.zip
                  environment: deploymentid=${{ github.run_id }}${{ github.run_attempt }}